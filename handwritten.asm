; handwritten code, feel free to modify anything here.
; for instance, here's some sample code that will overwrite team names

; --------------------
; example 1: set where we want to overwrite. here we'll overwrite the names for the Giants and some other teams
; the label "team_giants" is generated by Diz and you can use it here
; --------------------
; ORG txt_team_names_left_justified+$D2    ; this is at 0xC34755 (snes address) or offset 0x034914 in the ROM
; db "GHOSTKIDS", $00    ; was the brewers
; db "BALLPLAYR", $00
; db "  JUNKERS", $00
; db "  PRINCES", $00
; NOTE: i dont see the effect in-game but it definitely changes the bytes in the ROM. I must have the wrong table


; --------------------
; more complex example #2. the code at this location normally loads the address of the "LEFT JUSTIFIED" team names.
; if we overwrite it and force it to use another table containing right justified names, it'll demonstrate reading different
; addresses/etc
;
; you could also point this at a new copy of the code and overwrite the tables etc.
; if you use this, comment the above code
; --------------------
; ORG C1E971
; LDA.L txt_team_names_right_justified,X
; --------------------
; Plazma experimenting, bear with me, this won't be perfect
; ORG $C34202        ;
; db $01, $01, $17, $25, $74,
; Dom's command, pasted with the proper corrected bytes
; this tells Asar that anything that comes after begins overwriting the bytes at address $C7BD02
ORG $C7BD02

; now, whatever we write below will end up in C7BD02, (just like if we had edited them in HxD)
; let's stick a copy of the original table there:
; first couple entries of the table
db $01,$01,$13,$25,$74
db $01,$01,$14,$25,$74
db $01,$01,$15,$25,$74
db $01,$01,$16,$25,$74

; rest of the table (too lazy to clean this up)
db $01,$0B,$13,$25,$74,$01,$0B,$14
db $25,$74,$01,$0B,$15,$25,$74,$01
db $0B,$16,$25,$74,$01,$0B,$17,$25
db $74,$01,$17,$13,$25,$74,$01,$17
db $14,$25,$74,$01,$17,$15,$25,$74
db $01,$17,$16,$25,$74,$01,$17,$17
db $25,$74,$00,$01,$01,$13,$25,$74
db $01,$01,$14,$25,$74,$01,$01,$15
db $25,$74,$01,$01,$16,$25,$74,$01
db $0B,$13,$25,$74,$01,$0B,$14,$25
db $74,$01,$0B,$15,$25,$74,$01,$0B
db $16,$25,$74,$01,$0B,$17,$25,$74
db $01,$16,$13,$25,$74,$01,$16,$14
db $25,$74,$01,$16,$15,$25,$74,$01
db $16,$16,$25,$74,$01,$16,$17,$25
db $74,$00,$02,$01,$03,$06

; now, add two new entries: (replace X's with whatever you want)
db $01,$01,$17,$25,$74
db $01,$01,$17,$25,$74
